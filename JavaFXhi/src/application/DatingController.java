package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;

import java.io.IOException;
import java.net.URL;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;

import javafx.scene.image.ImageView;

import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class DatingController implements Initializable {
	private Stage stage;
	private Scene scene;
	private Parent root;
	 @FXML
    private TextField AgeField;

    @FXML
    private TextField BookField;

    @FXML
    private Button BtnPost;

    @FXML
    private TextField CelebrityField;

    @FXML
    private TextField ContactFBField;

    @FXML
    private TextField ContactIGField;

    @FXML
    private CheckBox DrinkingCheck;

    @FXML
    private VBox Layout;

    @FXML
    private TextField MBTIField;

    @FXML
    private TextField MovieField;

    @FXML
    private TextField MusicField;

    @FXML
    private TextField NameField;

    @FXML
    private CheckBox NonDrinkingCheck;

    @FXML
    private CheckBox NonSmokingCheck;

    @FXML
    private TextField PasswordField;

    @FXML
    private DatePicker PostDatePicker;

    @FXML
    private TextArea PostDescriptionField;

    @FXML
    private TextField PostLocationField;

    @FXML
    private TextField PostPeopleField;

    @FXML
    private TextField PostTimeField;

    @FXML
    private TextField PostTitleField;

    @FXML
    private ChoiceBox<String> PurposeChoice;

    @FXML
    private TextField SexualPerferenceField;

    @FXML
    private CheckBox SmokingCheck;

    @FXML
    private Label UserIDLabel;

    @FXML
    private ImageView UserImage;

    @FXML
    private Label UserNameLabel;

    @FXML
    private Button btnEditprofile;

    @FXML
    private Button btnSaveChanges;

    @FXML
    private Button btndating;

    @FXML
    private Button btnpasswordchange;

    @FXML
    private Button btnposting;

    @FXML
    private Button btnprofile;

    @FXML
    private Button btnsetting;

    @FXML
    private AnchorPane datingpage;

    @FXML
    private TextField departmentField;

    @FXML
    private TextField gradeField;

    @FXML
    private Button logout;

    @FXML
    private AnchorPane postingpage;

    @FXML
    private AnchorPane profilepage;

    @FXML
    private AnchorPane settingpage;
    
    @FXML
    private Button BtnPostIt ;
    
    private static Profile profile ;
    
    private List<ActivityInformation> activities = new ArrayList<>();
    
    public void setProfile(Profile profile) {
        DatingController.profile = profile;
    }
    
    

    @FXML
    public void btnchangesaving(ActionEvent event) {

    }
    
    @FXML
    public void btneditprofile(ActionEvent event) {

    }
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		 if (profile != null) {
	            // Use the profile information to populate the UI elements
	            UserNameLabel.setText(profile.getUsername());
	        }
		
		PurposeChoice.getItems().addAll("純交友","找另一半","就玩玩");
		
		
		List<ActivityInformation> actis = new ArrayList<>(activities);
		
		if(actis.size()<0) {
			for(int i= 0; i< actis.size();i++) {
				FXMLLoader fxmlloader = new FXMLLoader();
				fxmlloader.setLocation(getClass().getResource("Activityitem.fxml"));
				
				try {
					
					HBox hbox = fxmlloader.load();
					ActivityitemController ac = fxmlloader.getController();
					ac.setData(actis.get(i));
					
					Layout.getChildren().add(hbox);
					
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
		}
	}
	
//	@FXML
//	public void btneditprofile(ActionEvent event) {
//		// TODO Autogenerated
//		profile = new Profile();
//		imageview = new ImageView(getClass().getResourceAsStream());
//	}
	@FXML
	public void btnpasswordsaving(ActionEvent event) {
		// TODO Autogenerated
		
		
		
	}
	
	@FXML
	private void handleclicked(ActionEvent event) {
		if(event.getSource()== btnprofile) {
			profilepage.toFront();
			
		}
		else if(event.getSource()== btnsetting) {
			settingpage.toFront();
			
		}
		else if(event.getSource()== btnposting) {
			postingpage.toFront();
		}
		else if(event.getSource()== btndating) {
			datingpage.toFront();
		}
		
	}
	@FXML
	private void logout(ActionEvent event) throws IOException {
		FXMLLoader loader = new FXMLLoader(getClass().getResource("Login.fxml"));
		root = loader.load();
		stage = (Stage)((Node)event.getSource()).getScene().getWindow();
		Scene scene = new Scene(root);
		stage.setScene(scene);
		stage.show();
	}
	
	@FXML
    public void SavePost(ActionEvent event) {

		ActivityInformation NewPost = new ActivityInformation(PostTitleField.getText(), PostLocationField.getText(), PostDatePicker.getValue(), PostTimeField.getText(), Integer.parseInt(PostPeopleField.getText()), PostDescriptionField.getText(),profile);
		activities.add(NewPost);
    	//連線db 插入新的post 關db
    	
    	
    }

	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

		
	
	
	
}


	