package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javafx.event.ActionEvent;

import javafx.scene.control.PasswordField;

public class LoginController {
	@FXML
	private TextField LoginUsername;
	@FXML
	private PasswordField LoginPasswordfield;
	@FXML
	private Button btnSingup;
	@FXML
	private Button btnLogin;
	@FXML
	private Label Loginsuccess;
	
	private User user = new User();
	private Stage stage;
	private Scene scene;
	private Parent root;
	
	private Database db = new Database();
	private String password;
	private String userName;
	private static Profile profile;
	

	// Event Listener on Button[#btnSingup].onAction
	@FXML
	public void btnEnrolled(ActionEvent event) throws IOException, SQLException {
		// TODO Autogenerated
		try {
			
			user.add(LoginUsername.getText(),LoginPasswordfield.getText());
			if(user.getValid()== true ) {
				createProfile(LoginUsername.getText(), LoginPasswordfield.getText());
				db.insertProfile(profile);
				Loginsuccess.setText("You are successfully signed up");
				
			}
			
		} catch (PasswordError  e) {
			// TODO Auto-generated catch block
			
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("Error");
			alert.setContentText(e.getMessage());
			alert.showAndWait();
		}
		catch(UserError e) {
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("Error");
			alert.setContentText(e.getMessage());
			alert.showAndWait();
		}
		
	}
	// Event Listener on Button[#btnLogin].onAction
	@FXML
	public void btnLogin(ActionEvent event) throws IOException, SQLException {
		// TODO Autogenerated
		try {
			user.checkUserExist(LoginUsername.getText());
			user.checkPassword(LoginUsername.getText(), LoginPasswordfield.getText());
			
			createProfile(LoginUsername.getText(), LoginPasswordfield.getText());
			
			FXMLLoader loader = new FXMLLoader(getClass().getResource("Dating.fxml"));
			root = loader.load();
//			DatingController datingController =(DatingController)loader.getController();
//			datingController.setProfile(profile);
			
			stage = (Stage)((Node)event.getSource()).getScene().getWindow();
			Scene scene = new Scene(root);
			stage.setScene(scene);
			stage.show();
			
		} catch(UserError e) {
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("Error");
			alert.setContentText(e.getMessage());
			alert.showAndWait();
			
		}catch (PasswordError  e) {
			// TODO Auto-generated catch block
			
			Alert alert = new Alert(AlertType.ERROR);
			alert.setTitle("Error");
			alert.setContentText(e.getMessage());
			alert.showAndWait();
		}
	}
	
	///UPDATE///
	public void createProfile(String username, String password) throws SQLException {
		profile = new Profile(username, password);
		profile.setID(db.getUserId(username));
	
		
	}
	
	public String getPassword() {
		password = LoginPasswordfield.getText();
		return password;
	}
	
	public String getUserName() {
		userName =  LoginUsername.getText();
		return userName;
	}
	
	public Profile getProfile() {
		return profile;
	}
	
}